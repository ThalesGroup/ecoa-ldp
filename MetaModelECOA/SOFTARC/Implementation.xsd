<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.ecoa.technology/Implementation/3.0" targetNamespace="http://www.ecoa.technology/Implementation/3.0" elementFormDefault="qualified">

    <xsd:redefine schemaLocation="../Implementation.xsd">

        <xsd:complexType name="CT_languagecpp">
            <xsd:complexContent>
                <xsd:extension base="CT_languagecpp">
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
        <xsd:complexType name="CT_languagejava">
            <xsd:complexContent>
                <xsd:extension base="CT_languagejava">
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
        <xsd:complexType name="CT_languageada">
            <xsd:complexContent>
                <xsd:extension base="CT_languageada">
                    <xsd:sequence>
                        <xsd:element name="extends_gpr" minOccurs="0" maxOccurs="1">
                            <xsd:annotation>
                                <xsd:documentation>
                      Optional name of an existing GPR file that the GPR file generated by GenBuild will extend.
                      $(PROJECT_ROOT) may be used to refer to the root of the SOFTARC workspace.
                      $(X) will be expanded to the value of the environment variable X.
                    </xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:attribute name="name" type="xsd:string" use="required" />
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="with_gpr" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>
                      Optional "with" clause that will be inserted in the GPR file generated by GenBuild.
                      $(PROJECT_ROOT) may be used to refer to the root of the SOFTARC workspace.
                      $(X) will be expanded to the value of the environment variable X.
                    </xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:attribute name="name" type="xsd:string" use="required" />
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="gpr_package" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>
                      Adds a line "package {name} renames {renames};" in the GPR file generated by GenBuild.
                    </xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:attribute name="name" type="xsd:string" use="required" />
                                <xsd:attribute name="renames" type="xsd:string" use="required" />
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>

                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
		<xsd:complexType name="CT_languagerust">
            <xsd:complexContent>
                <xsd:extension base="CT_languagerust">
                    <xsd:sequence>
                        <xsd:element name="dependency" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>
                      Optional dependency to a rust project that can be build with cargo.
                      $(PROJECT_ROOT) may be used to refer to the root of the SOFTARC workspace.
                      $(X) will be expanded to the value of the environment variable X.
                    			</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:attribute name="name" type="xsd:string" use="required" />
                                <xsd:attribute name="path" type="xsd:string" use="required" />
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>

                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
        <xsd:complexType name="CT_implementation">
            <xsd:complexContent>
                <xsd:extension base="CT_implementation">
                    <xsd:sequence>
                        <xsd:element name="topic" type="CT_topic" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>
                    A topic is a user-defined trace point, for this component.
                  </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>

                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>

    </xsd:redefine>

    <xsd:complexType name="CT_topic">
        <xsd:attribute name="name" type="xsd:NCName" use="required">
            <xsd:annotation>
                <xsd:documentation>
        This name is local to the component implementation. The name of the corresponding trace points in a deployed system are:
        "instance_name.topic_name".
        </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

</xsd:schema>